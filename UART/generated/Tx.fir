;buildInfoPackage: chisel3, version: 3.0-SNAPSHOT, scalaVersion: 2.11.7, sbtVersion: 0.13.12, builtAtString: 2017-05-25 17:44:19.669, builtAtMillis: 1495734259669
circuit Tx : 
  module Tx : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, txd : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg data : UInt<9>, clock with : (reset => (reset, UInt<9>("h01ff"))) @[UART.scala 119:28]
    reg ticks : UInt<32>, clock with : (reset => (reset, UInt<1>("h00"))) @[UART.scala 120:28]
    reg state : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[UART.scala 121:28]
    node _T_16 = eq(state, UInt<4>("h00")) @[UART.scala 123:27]
    io.enq.ready <= _T_16 @[UART.scala 123:18]
    node _T_17 = eq(UInt<4>("h00"), state) @[Conditional.scala 29:28]
    when _T_17 : @[Conditional.scala 29:59]
      when io.enq.valid : @[UART.scala 127:33]
        node _T_19 = cat(io.enq.bits, UInt<1>("h00")) @[Cat.scala 30:58]
        data <= _T_19 @[UART.scala 128:23]
        ticks <= UInt<1>("h00") @[UART.scala 129:23]
        state <= UInt<4>("h0a") @[UART.scala 130:23]
        skip @[UART.scala 127:33]
      skip @[Conditional.scala 29:59]
    node _T_21 = eq(UInt<4>("h01"), state) @[Conditional.scala 29:28]
    node _T_22 = eq(UInt<4>("h02"), state) @[Conditional.scala 29:28]
    node _T_23 = eq(UInt<4>("h03"), state) @[Conditional.scala 29:28]
    node _T_24 = eq(UInt<4>("h04"), state) @[Conditional.scala 29:28]
    node _T_25 = eq(UInt<4>("h05"), state) @[Conditional.scala 29:28]
    node _T_26 = eq(UInt<4>("h06"), state) @[Conditional.scala 29:28]
    node _T_27 = eq(UInt<4>("h07"), state) @[Conditional.scala 29:28]
    node _T_28 = eq(UInt<4>("h08"), state) @[Conditional.scala 29:28]
    node _T_29 = eq(UInt<4>("h09"), state) @[Conditional.scala 29:28]
    node _T_30 = eq(UInt<4>("h0a"), state) @[Conditional.scala 29:28]
    node _T_31 = or(_T_21, _T_22) @[Conditional.scala 29:53]
    node _T_32 = or(_T_31, _T_23) @[Conditional.scala 29:53]
    node _T_33 = or(_T_32, _T_24) @[Conditional.scala 29:53]
    node _T_34 = or(_T_33, _T_25) @[Conditional.scala 29:53]
    node _T_35 = or(_T_34, _T_26) @[Conditional.scala 29:53]
    node _T_36 = or(_T_35, _T_27) @[Conditional.scala 29:53]
    node _T_37 = or(_T_36, _T_28) @[Conditional.scala 29:53]
    node _T_38 = or(_T_37, _T_29) @[Conditional.scala 29:53]
    node _T_39 = or(_T_38, _T_30) @[Conditional.scala 29:53]
    when _T_39 : @[Conditional.scala 29:59]
      node _T_40 = eq(ticks, UInt<9>("h01b2")) @[UART.scala 135:25]
      when _T_40 : @[UART.scala 135:39]
        node _T_42 = shr(data, 1) @[UART.scala 136:43]
        node _T_43 = cat(UInt<1>("h01"), _T_42) @[Cat.scala 30:58]
        data <= _T_43 @[UART.scala 136:23]
        ticks <= UInt<1>("h00") @[UART.scala 137:23]
        node _T_46 = sub(state, UInt<1>("h01")) @[UART.scala 138:32]
        node _T_47 = asUInt(_T_46) @[UART.scala 138:32]
        node _T_48 = tail(_T_47, 1) @[UART.scala 138:32]
        state <= _T_48 @[UART.scala 138:23]
        skip @[UART.scala 135:39]
      node _T_50 = eq(_T_40, UInt<1>("h00")) @[UART.scala 135:39]
      when _T_50 : @[UART.scala 139:26]
        node _T_52 = add(ticks, UInt<1>("h01")) @[UART.scala 140:32]
        node _T_53 = tail(_T_52, 1) @[UART.scala 140:32]
        ticks <= _T_53 @[UART.scala 140:23]
        skip @[UART.scala 139:26]
      skip @[Conditional.scala 29:59]
    node _T_54 = bits(data, 0, 0) @[UART.scala 144:19]
    io.txd <= _T_54 @[UART.scala 144:12]
    
