// InstructionTemplet -- templet for instructions 
//
// Author:  Morten Ambrosius Andreasen (s141227@student.dtu.dk)
//          Technical University of Denmark, DTU Compute
//
// Version: 0.1 (March 2017)

/* Discription:

Each char in the instruction templates below, should be replaced 
by either a one or a zero. Already defined ones and zeros 
should not be changed. The underscore just aid in reading  
each instruction field, and is ignored by Chisel. 

x -> undefined
d -> dest
s -> src
i -> imm
o -> offset
b -> base
S -> succesor
P -> predecessor 
*/

0000000_00000_00000_000_00000_0000000	-	NOP

// LOADS-------------------------------------------------------

oooooooooooo_bbbbb_000_ddddd_0000011	-	LB 	rd, rs1, imm
oooooooooooo_bbbbb_001_ddddd_0000011 	-	LH 	rd, rs1, imm
oooooooooooo_bbbbb_010_ddddd_0000011 	-	LW 	rd, rs1, imm
oooooooooooo_bbbbb_100_ddddd_0000011 	-	LBU rd, rs1, imm
oooooooooooo_bbbbb_101_ddddd_0000011 	-	LHU rd, rs1, imm

// STORES------------------------------------------------------ 

ooooooo_sssss_bbbbb_000_ooooo_0100011 	-	SB rs1, rs2, imm
ooooooo_sssss_bbbbb_001_ooooo_0100011 	- 	SH rs1, rs2, imm 
ooooooo_sssss_bbbbb_010_ooooo_0100011 	- 	SW rs1, rs2, imm
	
// SHIFTS------------------------------------------------------

0000000_sssss_sssss_001_ddddd_0110011 	- 	SLL  rd, rs1, rs2
0000000_iiiii_sssss_001_ddddd_0010011 	- 	SLLI rd, rs1, shamt
0000000_sssss_sssss_101_ddddd_0110011 	- 	SRL  rd, rs1, rs2
0000000_iiiii_sssss_101_ddddd_0010011 	- 	SRLI rd, rs1, shamt
0100000_sssss_sssss_101_ddddd_0110011 	- 	SRA  rd, rs1, rs2
0100000_iiiii_sssss_101_ddddd_0010011 	- 	SRAI rd, rs1, shamt
  
// ARITHMETIC--------------------------------------------------

0000000_sssss_sssss_000_ddddd_0110011 	- 	ADD   rd, rs1, rs2
iiiiiiiiiiii_sssss_000_ddddd_0010011 	- 	ADDI  rd, rs1, imm
0100000_sssss_sssss_000_ddddd_0110011	- 	SUB   rd, rs1, rs2
iiiiiiiiiiiiiiiiiiii_ddddd_0110111 		- 	LUI   rd, imm
iiiiiiiiiiiiiiiiiiii_ddddd_0010111 		- 	AUIPC rd, imm
  
// LOGICAL-----------------------------------------------------

0000000_sssss_sssss_100_ddddd_0110011 	- 	XOR  rd, rs1, rs2
iiiiiiiiiiii_sssss_100_ddddd_0010011 	-	XORI rd, rs1, imm
0000000_sssss_sssss_110_ddddd_0110011 	- 	OR 	 rd, rs1, rs2
iiiiiiiiiiii_sssss_110_ddddd_0010011  	- 	ORI  rd, rs1, imm
0000000_sssss_sssss_111_ddddd_0110011 	- 	AND  rd, rs1, rs2
iiiiiiiiiiii_sssss_111_ddddd_0010011 	- 	ANDI rd, rs1, imm

// COMPARE-----------------------------------------------------

0000000_sssss_sssss_010_ddddd_0110011 	- 	SLT   rd, rs1, rs2
iiiiiiiiiiii_sssss_010_ddddd_0010011 	- 	SLTI  rd, rs1, imm
0000000_sssss_sssss_011_ddddd_0110011 	- 	SLTU  rd, rs1, rs2
iiiiiiiiiiii_sssss_011_ddddd_0010011 	- 	SLTIU rd, rs1, imm

// BRANCHES---------------------------------------------------- 

o_oooooo_sssss_sssss_000_oooo_o_1100011 - 	BEQ  rs1, rs2, imm
o_oooooo_sssss_sssss_001_oooo_o_1100011 - 	BNE  rs1, rs2, imm
o_oooooo_sssss_sssss_100_oooo_o_1100011 -	BLT  rs1, rs2, imm
o_oooooo_sssss_sssss_101_oooo_o_1100011 - 	BGE  rs1, rs2, imm
o_oooooo_sssss_sssss_110_oooo_o_1100011 - 	BLTU rs1, rs2, imm
o_oooooo_sssss_sssss_111_oooo_o_1100011 - 	BGEU rs1, rs2, imm

// JUMP AND LINK-----------------------------------------------

o_oooooooooo_o_oooooooo_ddddd_1101111 	- 	JAL  rd, imm
oooooooooooo_bbbbb_000_ddddd_1100111 	- 	JALR rd, rs1, imm

// SYNCH-------------------------------------------------------

0_P_P_P_P_S_S_S_S_sssss_xxx_ddddd_0001111 	-	FENCH
000000000000_00000_xxx_00000_0001111 		- 	FENCH_I

// SYSTEM------------------------------------------------------

xxxxxxx_xxxxx_xxxxx_xxx_xxxxx_xxxxxxx 	- 	SCALL
xxxxxxx_xxxxx_xxxxx_xxx_xxxxx_xxxxxxx 	- 	SBREAK

// COUNTERS----------------------------------------------------

xxxxxxx_xxxxx_xxxxx_xxx_xxxxx_xxxxxxx 	- 	RDCYCLE.   rd
xxxxxxx_xxxxx_xxxxx_xxx_xxxxx_xxxxxxx 	- 	RDCYCLEH   rd
xxxxxxx_xxxxx_xxxxx_xxx_xxxxx_xxxxxxx 	- 	RDTIME 	   rd
xxxxxxx_xxxxx_xxxxx_xxx_xxxxx_xxxxxxx 	- 	RDTIMEH    rd
xxxxxxx_xxxxx_xxxxx_xxx_xxxxx_xxxxxxx 	- 	RDINSTRET  rd
xxxxxxx_xxxxx_xxxxx_xxx_xxxxx_xxxxxxx 	- 	RDINSTRETH rd
